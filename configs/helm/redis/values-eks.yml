image:
  registry: cgr.dev
  repository: chainguard/redis-server-bitnami
  digest: "sha256:b2c8322f1785cf2e4ce805959faffe84b505ef7572e84cb27ca43fc680f74fad"
  pullPolicy: Always

auth:
  enabled: false

commonConfiguration: |-
  appendonly yes
  maxmemory 200mb
  maxmemory-policy allkeys-lru
  save ""

master:
  disableCommands: []
  resources:
    limits:
      memory: 256Mi
    requests:
      cpu: 0.5
      memory: 128Mi
  persistence:
    size: 1Gi

replica:
  resources:
    limits:
      memory: 256Mi
    requests:
      cpu: 0.5
      memory: 128Mi
  persistence:
    size: 1Gi
  autoscaling:
    enabled: false
    minReplicas: 3
    maxReplicas: 5
    targetMemory: "80"

pdb:
  create: true
  minAvailable: 1

metrics:
  enabled: true
  image:
    registry: cgr.dev
    repository: chainguard/prometheus-redis-exporter
    digest: "sha256:53d74b9b90beed6bbba6c910703e7db1e90494f86396861e9f860c4cb4b58709"
    pullPolicy: Always
  serviceMonitor:
    enabled: true
  prometheusRule:
    rules:
      - alert: RedisDown
        expr: redis_up{service="{{ template "common.names.fullname" . }}-metrics"} == 0
        for: 2m
        labels:
          severity: error
        annotations:
          summary: Redis&reg; instance {{ "{{ $labels.instance }}" }} down
          description: Redis&reg; instance {{ "{{ $labels.instance }}" }} is down
      - alert: RedisMemoryHigh
        expr: >
          redis_memory_used_bytes{service="{{ template "common.names.fullname" . }}-metrics"} * 100
          /
          redis_memory_max_bytes{service="{{ template "common.names.fullname" . }}-metrics"}
          > 90
        for: 2m
        labels:
          severity: error
        annotations:
          summary: Redis&reg; instance {{ "{{ $labels.instance }}" }} is using too much memory
          description: |
            Redis&reg; instance {{ "{{ $labels.instance }}" }} is using {{ "{{ $value }}" }}% of its available memory.
      - alert: RedisKeyEviction
        expr: |
          increase(redis_evicted_keys_total{service="{{ template "common.names.fullname" . }}-metrics"}[5m]) > 0
        for: 1s
        labels:
          severity: error
        annotations:
          summary: Redis&reg; instance {{ "{{ $labels.instance }}" }} has evicted keys
          description: |
            Redis&reg; instance {{ "{{ $labels.instance }}" }} has evicted {{ "{{ $value }}" }} keys in the last 5 minutes.